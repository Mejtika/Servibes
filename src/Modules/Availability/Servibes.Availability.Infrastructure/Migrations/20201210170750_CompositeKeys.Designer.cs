// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servibes.Availability.Infrastructure;

namespace Servibes.Availability.Infrastructure.Migrations
{
    [DbContext(typeof(AvailabilityContext))]
    [Migration("20201210170750_CompositeKeys")]
    partial class CompositeKeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("availability")
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Servibes.Availability.Core.Companies.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Servibes.Availability.Core.Employees.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("_companyId")
                        .HasColumnName("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeeId");

                    b.HasIndex("_companyId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Servibes.Availability.Core.Companies.Company", b =>
                {
                    b.OwnsMany("Servibes.Availability.Core.Shared.HoursRange", "_openingHours", b1 =>
                        {
                            b1.Property<Guid>("OpeningHoursId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DayOfWeek")
                                .IsRequired()
                                .HasColumnName("DayOfWeek")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<TimeSpan>("End")
                                .HasColumnName("End")
                                .HasColumnType("time");

                            b1.Property<bool>("IsAvailable")
                                .HasColumnName("IsAvailable")
                                .HasColumnType("bit");

                            b1.Property<TimeSpan>("Start")
                                .HasColumnName("Start")
                                .HasColumnType("time");

                            b1.HasKey("OpeningHoursId", "CompanyId");

                            b1.HasIndex("CompanyId");

                            b1.ToTable("OpeningHours");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });
                });

            modelBuilder.Entity("Servibes.Availability.Core.Employees.Employee", b =>
                {
                    b.HasOne("Servibes.Availability.Core.Companies.Company", null)
                        .WithMany()
                        .HasForeignKey("_companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Servibes.Availability.Core.Employees.Reservation", "_reservations", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("End")
                                .HasColumnName("End")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("Start")
                                .HasColumnName("Start")
                                .HasColumnType("datetime2");

                            b1.HasKey("ReservationId", "EmployeeId");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsMany("Servibes.Availability.Core.Employees.TimeOff", "_timeOffs", b1 =>
                        {
                            b1.Property<Guid>("TimeOffId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("End")
                                .HasColumnName("End")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("Start")
                                .HasColumnName("Start")
                                .HasColumnType("datetime2");

                            b1.HasKey("TimeOffId", "EmployeeId");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("TimeOffs");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsMany("Servibes.Availability.Core.Shared.HoursRange", "_workingHours", b1 =>
                        {
                            b1.Property<Guid>("WorkingHourId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DayOfWeek")
                                .IsRequired()
                                .HasColumnName("DayOfWeek")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<TimeSpan>("End")
                                .HasColumnName("End")
                                .HasColumnType("time");

                            b1.Property<bool>("IsAvailable")
                                .HasColumnName("IsAvailable")
                                .HasColumnType("bit");

                            b1.Property<TimeSpan>("Start")
                                .HasColumnName("Start")
                                .HasColumnType("time");

                            b1.HasKey("WorkingHourId", "EmployeeId");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("WorkingHours");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
