// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servibes.BusinessProfile.Api;

namespace Servibes.BusinessProfile.Api.Migrations
{
    [DbContext(typeof(BusinessProfileContext))]
    partial class BusinessProfileContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("business")
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Servibes.BusinessProfile.Api.Model.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Servibes.BusinessProfile.Api.Model.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Servibes.BusinessProfile.Api.Model.Service", b =>
                {
                    b.Property<Guid>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Servibes.BusinessProfile.Api.Model.Company", b =>
                {
                    b.OwnsOne("Servibes.BusinessProfile.Api.Model.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FlatNumber")
                                .HasColumnName("FlatNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StreetNumber")
                                .HasColumnName("StreetNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .HasColumnName("ZipCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("Servibes.BusinessProfile.Api.Model.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnName("PhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("Servibes.BusinessProfile.Api.Model.WeekHoursRange", "OpeningHours", b1 =>
                        {
                            b1.Property<Guid>("OpeningHourId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("OpeningHourId");

                            b1.HasIndex("CompanyId")
                                .IsUnique();

                            b1.ToTable("OpeningHours");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Friday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeOpeningHourId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Friday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Friday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Friday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeOpeningHourId");

                                    b2.ToTable("OpeningHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeOpeningHourId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Monday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeOpeningHourId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Monday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Monday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Monday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeOpeningHourId");

                                    b2.ToTable("OpeningHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeOpeningHourId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Saturday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeOpeningHourId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Saturday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Saturday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Saturday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeOpeningHourId");

                                    b2.ToTable("OpeningHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeOpeningHourId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Sunday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeOpeningHourId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Sunday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Sunday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Sunday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeOpeningHourId");

                                    b2.ToTable("OpeningHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeOpeningHourId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Thursday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeOpeningHourId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Thursday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Thursday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Thursday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeOpeningHourId");

                                    b2.ToTable("OpeningHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeOpeningHourId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Tuesday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeOpeningHourId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Tuesday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Tuesday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Tuesday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeOpeningHourId");

                                    b2.ToTable("OpeningHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeOpeningHourId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Wednesday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeOpeningHourId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Wednesday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Wednesday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Wednesday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeOpeningHourId");

                                    b2.ToTable("OpeningHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeOpeningHourId");
                                });
                        });
                });

            modelBuilder.Entity("Servibes.BusinessProfile.Api.Model.Employee", b =>
                {
                    b.HasOne("Servibes.BusinessProfile.Api.Model.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Servibes.BusinessProfile.Api.Model.WeekHoursRange", "WorkingHours", b1 =>
                        {
                            b1.Property<Guid>("WorkingHoursId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("WorkingHoursId");

                            b1.HasIndex("EmployeeId")
                                .IsUnique();

                            b1.ToTable("WorkingHours");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Friday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeWorkingHoursId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Friday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Friday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Friday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeWorkingHoursId");

                                    b2.ToTable("WorkingHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeWorkingHoursId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Monday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeWorkingHoursId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Monday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Monday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Monday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeWorkingHoursId");

                                    b2.ToTable("WorkingHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeWorkingHoursId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Saturday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeWorkingHoursId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Saturday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Saturday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Saturday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeWorkingHoursId");

                                    b2.ToTable("WorkingHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeWorkingHoursId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Sunday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeWorkingHoursId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Sunday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Sunday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Sunday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeWorkingHoursId");

                                    b2.ToTable("WorkingHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeWorkingHoursId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Thursday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeWorkingHoursId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Thursday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Thursday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Thursday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeWorkingHoursId");

                                    b2.ToTable("WorkingHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeWorkingHoursId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Tuesday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeWorkingHoursId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Tuesday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Tuesday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Tuesday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeWorkingHoursId");

                                    b2.ToTable("WorkingHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeWorkingHoursId");
                                });

                            b1.OwnsOne("Servibes.BusinessProfile.Api.Model.HoursRange", "Wednesday", b2 =>
                                {
                                    b2.Property<Guid>("WeekHoursRangeWorkingHoursId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<TimeSpan>("End")
                                        .HasColumnName("Wednesday_End")
                                        .HasColumnType("time");

                                    b2.Property<bool>("IsAvailable")
                                        .HasColumnName("Wednesday_IsAvailable")
                                        .HasColumnType("bit");

                                    b2.Property<TimeSpan>("Start")
                                        .HasColumnName("Wednesday_Start")
                                        .HasColumnType("time");

                                    b2.HasKey("WeekHoursRangeWorkingHoursId");

                                    b2.ToTable("WorkingHours");

                                    b2.WithOwner()
                                        .HasForeignKey("WeekHoursRangeWorkingHoursId");
                                });
                        });
                });

            modelBuilder.Entity("Servibes.BusinessProfile.Api.Model.Service", b =>
                {
                    b.HasOne("Servibes.BusinessProfile.Api.Model.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Servibes.BusinessProfile.Api.Model.Performer", "Performers", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("PerformerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("ServiceId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("ServiceId");

                            b1.ToTable("Performers");

                            b1.WithOwner()
                                .HasForeignKey("ServiceId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
